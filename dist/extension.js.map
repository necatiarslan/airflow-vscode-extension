{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://airflow-vscode-extension/webpack/runtime/require chunk loading","webpack://airflow-vscode-extension/./node_modules/base-64/base64.js","webpack://airflow-vscode-extension/./node_modules/node-domexception/index.js","webpack://airflow-vscode-extension/./src/airflowView.ts","webpack://airflow-vscode-extension/./node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","webpack://airflow-vscode-extension/external commonjs \"vscode\"","webpack://airflow-vscode-extension/external node-commonjs \"buffer\"","webpack://airflow-vscode-extension/external node-commonjs \"node:process\"","webpack://airflow-vscode-extension/external node-commonjs \"node:stream/web\"","webpack://airflow-vscode-extension/external node-commonjs \"worker_threads\"","webpack://airflow-vscode-extension/./node_modules/fetch-blob/streams.cjs","webpack://airflow-vscode-extension/./node_modules/fetch-blob/file.js","webpack://airflow-vscode-extension/external node-commonjs \"node:fs\"","webpack://airflow-vscode-extension/external node-commonjs \"node:path\"","webpack://airflow-vscode-extension/./node_modules/fetch-blob/from.js","webpack://airflow-vscode-extension/./node_modules/fetch-blob/index.js","webpack://airflow-vscode-extension/./node_modules/formdata-polyfill/esm.min.js","webpack://airflow-vscode-extension/external node-commonjs \"node:http\"","webpack://airflow-vscode-extension/external node-commonjs \"node:https\"","webpack://airflow-vscode-extension/external node-commonjs \"node:zlib\"","webpack://airflow-vscode-extension/external node-commonjs \"node:stream\"","webpack://airflow-vscode-extension/external node-commonjs \"node:buffer\"","webpack://airflow-vscode-extension/external node-commonjs \"node:util\"","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/base.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/fetch-error.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/is.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/body.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/headers.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/is-redirect.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/response.js","webpack://airflow-vscode-extension/external node-commonjs \"node:url\"","webpack://airflow-vscode-extension/external node-commonjs \"node:net\"","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/referrer.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/request.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/abort-error.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/index.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/get-search.js","webpack://airflow-vscode-extension/./node_modules/data-uri-to-buffer/dist/index.js","webpack://airflow-vscode-extension/webpack/bootstrap","webpack://airflow-vscode-extension/webpack/runtime/define property getters","webpack://airflow-vscode-extension/webpack/runtime/ensure chunk","webpack://airflow-vscode-extension/webpack/runtime/get javascript chunk filename","webpack://airflow-vscode-extension/webpack/runtime/hasOwnProperty shorthand","webpack://airflow-vscode-extension/webpack/runtime/make namespace object","webpack://airflow-vscode-extension/webpack/runtime/node module decorator","webpack://airflow-vscode-extension/./src/extension.ts"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t179: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import * as vscode from 'vscode';\nimport fetch from 'node-fetch';\nimport { encode } from 'base-64';\n\nexport class AirflowViewManager {\n\n\tview: vscode.TreeView<vscode.TreeItem>;\n\ttreeDataProvider: AirflowTreeDataProvider;\n\tdaglistResponse: Promise<ResponseData>;\n\tapiUrl: string = \"http://localhost:8080/api/v1\";\n\tapiUserName: string = 'airflow';\n\tapiPassword: string = 'airflow';\n\tcontext: vscode.ExtensionContext;\n\tfilterString: string = '';\n\n\tconstructor(context: vscode.ExtensionContext) {\n\t\tthis.context = context;\n\t\tthis.treeDataProvider = new AirflowTreeDataProvider();\n\t\tthis.view = vscode.window.createTreeView('airflowView', { treeDataProvider: this.treeDataProvider, showCollapseAll: true });\n\t\tthis.loadState();\n\t\tthis.refresh();\n\t\tcontext.subscriptions.push(this.view);\n\t}\n\n\trefresh(): void {\n\t\tthis.loadDags();\n\t}\n\n\tviewDagView(): void {\n\t\tthis.showInfoMessage(\"Development In Progress ...\");\n\t}\n\n\tasync triggerDag(node: vscode.TreeItem) {\n\t\tlet triggerDagConfig = await vscode.window.showInputBox({ placeHolder: 'Enter Configuration JSON (Optional, must be a dict object)' });\n\t\t\n\t\tif (triggerDagConfig !== undefined) {\n\t\t\ttry {\n\t\t\t\tlet params = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t\t},\n\t\t\t\t\tbody: {\n\t\t\t\t\t\t\"dag_run_id\": null,\n\t\t\t\t\t\t\"logical_date\": null,\n\t\t\t\t\t\t\"state\": \"queued\",\n\t\t\t\t\t\t\"conf\": {}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.label + '/dagRuns', params);\n\n\t\t\t\tthis.showInfoMessage(node.label + \" Dag Triggered.\");\n\t\t\t} catch (error) {\n\t\t\t\tthis.showErrorMessage(node.label + 'Dag Trigger Error !!!\\n\\n' + error.message);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tshowInfoMessage(message: string): void {\n\t\tvscode.window.showInformationMessage(message);\n\t}\n\n\tshowErrorMessage(message: string): void {\n\t\tvscode.window.showErrorMessage(message);\n\t}\n\n\tasync filter() {\n\t\tlet filterStringTemp = await vscode.window.showInputBox({ placeHolder: 'Enter your filters seperated by comma' });\n\t\tif (filterStringTemp) {\n\t\t\tthis.filterString = filterStringTemp;\n\t\t\tthis.view.message = 'Filter : ' + this.filterString;\n\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t}\n\t\telse {\n\t\t\tthis.filterString = '';\n\t\t\tthis.view.message = '';\n\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t}\n\t\tthis.saveState();\n\t\tthis.treeDataProvider.refresh();\n\t}\n\n\tasync addServer() {\n\t\tlet apiUrlTemp = await vscode.window.showInputBox({ placeHolder: 'API Full URL (Exp:http://localhost:8080/api/v1)' });\n\t\tif (!apiUrlTemp) { return; }\n\n\t\tlet userNameTemp = await vscode.window.showInputBox({ placeHolder: 'User Name' });\n\t\tif (!userNameTemp) { return; }\n\n\t\tlet passwordTemp = await vscode.window.showInputBox({ placeHolder: 'Password' });\n\t\tif (!passwordTemp) { return; }\n\n\t\tthis.apiUrl = apiUrlTemp;\n\t\tthis.apiUserName = userNameTemp;\n\t\tthis.apiPassword = passwordTemp;\n\n\t\tthis.saveState();\n\n\t\tthis.refresh();\n\t}\n\n\tasync loadDags() {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\n\t\tthis.daglistResponse = undefined;\n\t\tthis.treeDataProvider.daglistResponse = this.daglistResponse;\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags', params);\n\n\t\t\tthis.daglistResponse = await response.json() as Promise<ResponseData>;\n\t\t\tthis.treeDataProvider.daglistResponse = this.daglistResponse;\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Can not connect to Airflow. Please check Url, UserName and Password.\\n\\n' + error.message);\n\t\t}\n\n\t\tthis.treeDataProvider.refresh();\n\n\t\tthis.view.title = this.apiUrl;\n\t\t//this.view.message = 'message';\n\t}\n\n\tsaveState() {\n\t\ttry {\n\t\t\tthis.context.globalState.update('apiUrl', this.apiUrl);\n\t\t\tthis.context.globalState.update('apiUserName', this.apiUserName);\n\t\t\tthis.context.globalState.update('apiPassword', this.apiPassword);\n\t\t\tthis.context.globalState.update('filterString', this.filterString);\n\t\t} catch (error) {\n\n\t\t}\n\t}\n\n\tloadState() {\n\t\ttry {\n\t\t\tlet apiUrlTemp: string = this.context.globalState.get('apiUrl');\n\t\t\tif (apiUrlTemp) { this.apiUrl = apiUrlTemp; }\n\n\t\t\tlet apiUserNameTemp: string = this.context.globalState.get('apiUserName');\n\t\t\tif (apiUserNameTemp) { this.apiUserName = apiUserNameTemp; }\n\n\t\t\tlet apiPasswordTemp: string = this.context.globalState.get('apiPassword');\n\t\t\tif (apiPasswordTemp) { this.apiPassword = apiPasswordTemp; }\n\n\t\t\tlet filterStringTemp: string = this.context.globalState.get('filterString');\n\t\t\tif (filterStringTemp) {\n\t\t\t\tthis.filterString = filterStringTemp;\n\t\t\t\tthis.view.message = 'Filter : ' + this.filterString;\n\t\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t\t}\n\t\t} catch (error) {\n\n\t\t}\n\t}\n}\n\nexport class AirflowTreeDataProvider implements vscode.TreeDataProvider<vscode.TreeItem>\n{\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<vscode.TreeItem | undefined | void> = new vscode.EventEmitter<vscode.TreeItem | undefined | void>();\n\treadonly onDidChangeTreeData: vscode.Event<vscode.TreeItem | undefined | void> = this._onDidChangeTreeData.event;\n\tdaglistResponse: Promise<ResponseData>;\n\tfilterString: string = '';\n\n\trefresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\n\tgetChildren(element: vscode.TreeItem): Thenable<vscode.TreeItem[]> {\n\t\tif (!element) {\n\t\t\tlet dagList: vscode.TreeItem[] = [];\n\n\t\t\tif (this.daglistResponse) {\n\t\t\t\tfor (var dag of this.daglistResponse[\"dags\"]) {\n\t\t\t\t\tif (dag) {\n\n\t\t\t\t\t\tlet dagId: string = dag[\"dag_id\"];\n\t\t\t\t\t\tlet isActive: boolean = dag[\"is_active\"];\n\t\t\t\t\t\tlet isPaused: boolean = dag[\"is_paused\"];\n\t\t\t\t\t\tlet owners: string[] = dag[\"owners\"];\n\t\t\t\t\t\tlet tags: string[] = dag[\"tags\"];\n\n\t\t\t\t\t\tif (!this.filterString || (this.filterString && this.doesFilterMatch(dagId, isActive, isPaused, owners, tags))) {\n\t\t\t\t\t\t\tlet treeItem = new vscode.TreeItem(dagId);\n\t\t\t\t\t\t\ttreeItem.iconPath = new vscode.ThemeIcon('gear');\n\t\t\t\t\t\t\tdagList.push(treeItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve(dagList);\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tdoesFilterMatch(dagId: string, isActive: boolean, isPaused: boolean, owners: string[], tags: string[]): boolean {\n\t\tif (this.filterString.includes('active') && !isPaused) { return true; }\n\t\tif (this.filterString.includes('paused') && isPaused) { return true; }\n\n\t\tlet words: string[] = this.filterString.split(',');\n\t\tfor (var word of words) {\n\t\t\tif (dagId.includes(word)) { return true; }\n\t\t\tif (owners.includes(word)) { return true; }\n\t\t\t//TODO\n\t\t\t//if(tags.forEach(function(e){ e.normalize.includes(word); })) { return true; }\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetTreeItem(element: vscode.TreeItem): vscode.TreeItem {\n\t\treturn element;\n\t}\n}\n\ninterface ITag {\n\tname: string\n}\n\ninterface ResponseData {\n\t\"dags\": [\n\t\t{\n\t\t\t\"dag_id\": \"string\",\n\t\t\t\"root_dag_id\": \"string\",\n\t\t\t\"is_paused\": true,\n\t\t\t\"is_active\": true,\n\t\t\t\"is_subdag\": true,\n\t\t\t\"last_parsed_time\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"last_pickled\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"last_expired\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"scheduler_lock\": true,\n\t\t\t\"pickle_id\": \"string\",\n\t\t\t\"default_view\": \"string\",\n\t\t\t\"fileloc\": \"string\",\n\t\t\t\"file_token\": \"string\",\n\t\t\t\"owners\": [\n\t\t\t\t\"string\"\n\t\t\t],\n\t\t\t\"description\": \"string\",\n\t\t\t\"schedule_interval\": {\n\t\t\t\t\"__type\": \"string\",\n\t\t\t\t\"days\": 0,\n\t\t\t\t\"seconds\": 0,\n\t\t\t\t\"microseconds\": 0\n\t\t\t},\n\t\t\t\"timetable_description\": \"string\",\n\t\t\t\"tags\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"max_active_tasks\": 0,\n\t\t\t\"max_active_runs\": 0,\n\t\t\t\"has_task_concurrency_limits\": true,\n\t\t\t\"has_import_errors\": true,\n\t\t\t\"next_dagrun\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"next_dagrun_data_interval_start\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"next_dagrun_data_interval_end\": \"2019-08-24T14:15:22Z\",\n\t\t\t\"next_dagrun_create_after\": \"2019-08-24T14:15:22Z\"\n\t\t}\n\t],\n\t\"total_entries\": 0\n}","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"worker_threads\");","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:zlib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:buffer\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:util\");","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:net\");","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (/^(.+\\.)*localhost$/.test(url.host)) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { AirflowViewManager } from './airflowView';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('Extension \"airflow-vscode-extension\" is now active!');\n\n\tlet airflowView:AirflowViewManager = new AirflowViewManager(context);\n\n\tvscode.commands.registerCommand('airflowView.refreshServer', () => {\n\t\tairflowView.refresh();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.addServer', () => {\n\t\tairflowView.addServer();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.filter', () => {\n\t\tairflowView.filter();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.viewDagView', () => {\n\t\tairflowView.viewDagView();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.triggerDag', (node: vscode.TreeItem) => {\n\t\tairflowView.triggerDag(node);\n\t});\n\n\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n\tconsole.log('Extension \"airflow-vscode-extension\" is now deactive!');\n}\n"],"names":["installedChunks","root","freeGlobal","module","exports","global","window","InvalidCharacterError","message","this","prototype","Error","name","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","String","test","a","b","c","buffer","padding","length","output","position","charCodeAt","charAt","replace","bitStorage","bitCounter","indexOf","fromCharCode","globalThis","DOMException","MessageChannel","port","port1","ab","ArrayBuffer","postMessage","err","constructor","context","apiUrl","apiUserName","apiPassword","filterString","treeDataProvider","AirflowTreeDataProvider","view","vscode","createTreeView","showCollapseAll","loadState","refresh","subscriptions","push","loadDags","viewDagView","showInfoMessage","async","node","undefined","showInputBox","placeHolder","params","method","headers","encode","body","label","showErrorMessage","showInformationMessage","filterStringTemp","saveState","apiUrlTemp","userNameTemp","passwordTemp","daglistResponse","response","json","title","globalState","update","get","apiUserNameTemp","apiPasswordTemp","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","fire","getChildren","element","dagList","dag","dagId","isActive","isPaused","owners","tags","doesFilterMatch","treeItem","TreeItem","iconPath","ThemeIcon","Promise","resolve","includes","words","split","word","getTreeItem","factory","SymbolPolyfill","Symbol","iterator","description","noop","globals","self","typeIsObject","x","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","then","originalPromiseResolve","bind","originalPromiseReject","reject","newPromise","executor","promiseResolvedWith","value","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","fn","reflectCall","F","V","args","TypeError","Function","apply","promiseCall","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","oldBack","newBack","QUEUE_MAX_ARRAY_SIZE","shift","oldFront","newFront","oldCursor","newCursor","elements","forEach","callback","i","peek","front","cursor","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseResolve","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","Number","isFinite","MathTrunc","Math","trunc","v","ceil","floor","assertDictionary","obj","assertFunction","assertObject","isObject","assertRequiredArgument","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","convertUnsignedLongLongWithEnforceRange","upperBound","MAX_SAFE_INTEGER","integerPart","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","closed","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","ReadableStreamDefaultReaderRead","_errorSteps","e","releaseLock","Object","hasOwnProperty","_disturbed","_readableStreamController","defineProperties","enumerable","toStringTag","defineProperty","configurable","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","return","returnSteps","_returnSteps","result","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","_a","setPrototypeOf","NumberIsNaN","isNaN","CreateArrayFromList","slice","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","Uint8Array","set","ArrayBufferSlice","begin","end","CloneAsUint8Array","O","byteOffset","byteLength","DequeueValue","container","pair","_queue","_queueTotalSize","size","EnqueueValueWithSize","Infinity","RangeError","ResetQueue","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","close","_closeRequested","state","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","controller","shouldPull","_started","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readIntoRequest","_readIntoRequests","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transferredBuffer","firstPendingPullInto","ReadableStreamError","create","request","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","DataView","BYTES_PER_ELEMENT","ctor","emptyView","ReadableByteStreamControllerPullInto","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSinkAbortCallback","original","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","supportsAbortController","AbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","abort","start","type","write","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","WritableStreamDefaultController","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","closeSentinel","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","writeRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","_strategySizeAlgorithm","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","createAbortController","_writeAlgorithm","_closeAlgorithm","WritableStreamMarkCloseRequestInFlight","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","_readyPromise_resolve","_readyPromise_reject","NativeDOMException","DOMException$1","isDOMExceptionConstructor","captureStackTrace","writable","createDOMExceptionPolyfill","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","all","map","action","aborted","addEventListener","isOrBecomesErrored","shutdown","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","removeEventListener","resolveLoop","rejectLoop","resolveRead","rejectRead","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","SetUpReadableStreamDefaultController","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","mode","convertPipeOptions","options","isAbortSignal","assertAbortSignal","Boolean","ReadableStream","rawUnderlyingSource","underlyingSource","pull","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","underlyingByteSource","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","getReader","rawOptions","convertReaderOptions","pipeThrough","rawTransform","transform","readable","convertReadableWritablePair","pipeTo","destination","tee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgainForBranch1","readAgainForBranch2","canceled1","canceled2","cancelPromise","forwardReaderError","thisReader","pullWithDefaultReader","chunk1","chunk2","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","compositeReason","cancelResult","ReadableByteStreamTee","cloneForBranch2","readAgain","CreateReadableStream","ReadableStreamDefaultTee","values","impl","AcquireReadableStreamAsyncIterator","convertIteratorOptions","convertQueuingStrategyInit","asyncIterator","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","flush","readableType","writableType","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","startPromise","_writable","CreateWritableStream","_transformStreamController","_backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","TransformStreamDefaultSinkWriteAlgorithm","_readable","flushPromise","_flushAlgorithm","TransformStreamDefaultControllerClearAlgorithms","TransformStreamError","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamSetBackpressure","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise_resolve","InitializeTransformStream","TransformStreamDefaultController","transformAlgorithm","TransformStreamDefaultControllerEnqueue","transformResultE","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","SetUpTransformStreamDefaultController","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","IsTransformStreamDefaultController","defaultControllerBrandCheckException","terminate","TransformStreamDefaultControllerTerminate","readableController","ReadableStreamDefaultControllerHasBackpressure","require","process","emitWarning","assign","Blob","blob","ctrl","arrayBuffer","fileBits","fileName","arguments","super","lastModified","Date","now","static","hasInstance","object","stat","blobFromSync","path","fromBlob","statSync","blobFrom","fileFrom","fromFile","fileFromSync","BlobDataItem","mtimeMs","basename","createReadStream","toIterator","parts","clone","part","_Blob","blobParts","encoder","TextEncoder","endings","decoder","TextDecoder","str","decode","data","offset","it","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","t","h","random","m","f","FormData","entries","o","some","append","delete","filter","l","getAll","has","d","formDataToBlob","B","padStart","p","FetchBaseError","FetchError","systemError","code","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","INTERNALS","Body","boundary","Buffer","toString","types","disturbed","on","error_","url","bodyUsed","consumeBody","ct","startsWith","formData","parameters","URLSearchParams","text","toFormData","buf","JSON","parse","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","join","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","validateHeaderValue","Headers","raw","Proxy","target","receiver","Set","keys","Reflect","thisArg","reduce","key","for","property","redirectStatus","isRedirect","Response","status","contentType","statusText","counter","ok","redirected","location","URL","stripURLForUseAsAReferrer","originOnly","protocol","username","password","hash","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","redirect","follow","compress","agent","insecureHTTPParser","referrerPolicy","format","validateReferrerPolicy","AbortError","supportedSchemas","fetch","options_","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","origin","determineRequestsReferrer","lastOffset","href","getSearch","getNodeRequestOptions","uri","firstComma","meta","substring","charset","typeFull","encoding","unescape","from","send","emit","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","prependListener","removeListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","index","array","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","orig","hostname","endsWith","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","token","parseReferrerPolicyFromHeader","once","responseOptions","statusMessage","codings","zlibOptions","finishFlush","writeToStream","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","definition","chunkId","promises","u","prop","nmd","paths","children","moreModules","modules","chunkIds","ids","runtime","installChunk","console","log","airflowView","AirflowViewManager","commands","registerCommand","addServer","triggerDag"],"sourceRoot":""}