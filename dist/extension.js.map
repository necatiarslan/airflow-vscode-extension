{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://airflow-vscode-extension/webpack/runtime/require chunk loading","webpack://airflow-vscode-extension/./node_modules/base-64/base64.js","webpack://airflow-vscode-extension/./node_modules/node-domexception/index.js","webpack://airflow-vscode-extension/./src/airflowView.ts","webpack://airflow-vscode-extension/./node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","webpack://airflow-vscode-extension/external commonjs \"vscode\"","webpack://airflow-vscode-extension/external node-commonjs \"buffer\"","webpack://airflow-vscode-extension/external node-commonjs \"node:process\"","webpack://airflow-vscode-extension/external node-commonjs \"node:stream/web\"","webpack://airflow-vscode-extension/external node-commonjs \"worker_threads\"","webpack://airflow-vscode-extension/./node_modules/fetch-blob/streams.cjs","webpack://airflow-vscode-extension/./node_modules/fetch-blob/file.js","webpack://airflow-vscode-extension/external node-commonjs \"node:fs\"","webpack://airflow-vscode-extension/external node-commonjs \"node:path\"","webpack://airflow-vscode-extension/./node_modules/fetch-blob/from.js","webpack://airflow-vscode-extension/./node_modules/fetch-blob/index.js","webpack://airflow-vscode-extension/./node_modules/formdata-polyfill/esm.min.js","webpack://airflow-vscode-extension/external node-commonjs \"node:http\"","webpack://airflow-vscode-extension/external node-commonjs \"node:https\"","webpack://airflow-vscode-extension/external node-commonjs \"node:zlib\"","webpack://airflow-vscode-extension/external node-commonjs \"node:stream\"","webpack://airflow-vscode-extension/external node-commonjs \"node:buffer\"","webpack://airflow-vscode-extension/external node-commonjs \"node:util\"","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/base.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/fetch-error.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/is.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/body.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/headers.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/is-redirect.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/response.js","webpack://airflow-vscode-extension/external node-commonjs \"node:url\"","webpack://airflow-vscode-extension/external node-commonjs \"node:net\"","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/referrer.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/request.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/errors/abort-error.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/index.js","webpack://airflow-vscode-extension/./node_modules/node-fetch/src/utils/get-search.js","webpack://airflow-vscode-extension/./node_modules/data-uri-to-buffer/dist/index.js","webpack://airflow-vscode-extension/webpack/bootstrap","webpack://airflow-vscode-extension/webpack/runtime/define property getters","webpack://airflow-vscode-extension/webpack/runtime/ensure chunk","webpack://airflow-vscode-extension/webpack/runtime/get javascript chunk filename","webpack://airflow-vscode-extension/webpack/runtime/hasOwnProperty shorthand","webpack://airflow-vscode-extension/webpack/runtime/make namespace object","webpack://airflow-vscode-extension/webpack/runtime/node module decorator","webpack://airflow-vscode-extension/./src/extension.ts"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t179: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import * as vscode from 'vscode';\nimport fetch from 'node-fetch';\nimport { encode } from 'base-64';\nimport { debug, trace } from 'console';\n\nexport class AirflowViewManager {\n\n\tview: vscode.TreeView<DagTreeItem>;\n\ttreeDataProvider: AirflowTreeDataProvider;\n\tdaglistResponse: any;\n\tapiUrl: string = '';\n\tapiUserName: string = '';\n\tapiPassword: string = '';\n\tcontext: vscode.ExtensionContext;\n\tfilterString: string = '';\n\n\tconstructor(context: vscode.ExtensionContext) {\n\t\tthis.context = context;\n\t\tthis.treeDataProvider = new AirflowTreeDataProvider();\n\t\tthis.view = vscode.window.createTreeView('airflowView', { treeDataProvider: this.treeDataProvider, showCollapseAll: true });\n\t\tthis.loadState();\n\t\tthis.refresh();\n\t\tcontext.subscriptions.push(this.view);\n\t}\n\n\trefresh(): void {\n\t\tthis.loadDags();\n\t}\n\n\tresetView(): void {\n\t\tthis.apiUrl = '';\n\t\tthis.apiUserName = '';\n\t\tthis.apiPassword = '';\n\t\tthis.filterString = '';\n\n\t\tthis.daglistResponse = undefined;\n\t\tthis.treeDataProvider.daglistResponse = this.daglistResponse;\n\t\tthis.treeDataProvider.refresh();\n\t\tthis.view.title = this.apiUrl;\n\n\t\tthis.saveState();\n\t\tthis.refresh();\n\t}\n\n\tviewDagView(): void {\n\t\tthis.showInfoMessage(\"Development In Progress ...\");\n\t}\n\n\tasync triggerDag(node: DagTreeItem) {\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t{\n\t\t\t\t\t\t\"conf\": {}\n\t\t\t\t\t}),\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.dagId + '/dagRuns', params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.showInfoMessage(node.dagId + \" Dag Triggered.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage(node.dagId + ' Dag Trigger Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage(node.dagId + ' Dag Trigger Error !!!\\n\\n' + error.message);\n\t\t}\n\t}\n\n\tasync triggerDagWConfig(node: DagTreeItem) {\n\t\tlet triggerDagConfig = await vscode.window.showInputBox({ placeHolder: 'Enter Configuration JSON (Optional, must be a dict object) or Press Enter' });\n\n\t\tthis.showInfoMessage(\"Development is in progress. Please wait for next versions.\");\n\t\treturn;\n\n\t\t// if(!triggerDagConfig)\n\t\t// {\n\t\t// \ttriggerDagConfig = {};\n\t\t// }\n\n\t\tif (triggerDagConfig !== undefined) {\n\t\t\ttry {\n\t\t\t\tlet params = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"conf\": {}\n\t\t\t\t\t\t}),\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.label + '/dagRuns', params);\n\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tthis.showInfoMessage(node.label + \" Dag Triggered.\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.showErrorMessage(node.label + ' Dag Trigger Error !!!\\n\\n' + response.statusText);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.showErrorMessage(node.label + ' Dag Trigger Error !!!\\n\\n' + error.message);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tasync pauseDAG(node: DagTreeItem) {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\t\tif (node.isPaused) { this.showInfoMessage(node.dagId + 'Dag is already PAUSED'); return; }\n\n\t\tlet userAnswer = await vscode.window.showInputBox({ placeHolder: node.dagId + ' DAG will be PAUSED. Yes/No ?' });\n\t\tif (userAnswer !== 'Yes') { return; }\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t{\n\t\t\t\t\t\t\"is_paused\": true\n\t\t\t\t\t}),\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.dagId, params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tnode.isPaused = true;\n\t\t\t\tnode.refreshUI();\n\t\t\t\tthis.treeDataProvider.refresh();\n\t\t\t\tthis.showInfoMessage(node.dagId + ' Dag PAUSED');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t\t\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Error !!! \\n\\n' + error.message);\n\t\t}\n\t}\n\n\tasync unPauseDAG(node: DagTreeItem) {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\t\tif (!node.isPaused) { this.showInfoMessage(node.dagId + 'Dag is already UNPAUSED'); return;}\n\n\t\tlet userAnswer = await vscode.window.showInputBox({ placeHolder: node.dagId + ' DAG will be UNPAUSED. Yes/No ?' });\n\t\tif (userAnswer !== 'Yes') { return; }\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t{\n\t\t\t\t\t\t\"is_paused\": false\n\t\t\t\t\t}),\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.dagId, params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tnode.isPaused = false;\n\t\t\t\tnode.refreshUI();\n\t\t\t\tthis.treeDataProvider.refresh();\n\t\t\t\tthis.showInfoMessage(node.dagId + ' Dag UNPAUSED');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t\t\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Error !!! \\n\\n' + error.message);\n\t\t}\n\t}\n\n\tasync lastDAGRunLog(node: DagTreeItem) {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.showInfoMessage('Fecthing Latest DAG Run Logs, wait please ...');\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags/' + node.dagId + '/dagRuns?order_by=-start_date&limit=1', params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet dagRunResponse = await response.json();\n\t\t\t\tlet dagRunId = dagRunResponse['dag_runs'][0]['dag_run_id'];\n\t\t\t\tlet responseTaskInstances = await (await fetch(this.apiUrl + '/dags/' + node.dagId + '/dagRuns/' + dagRunId + '/taskInstances', params));\n\t\t\t\tlet responseTaskInstancesJson = await responseTaskInstances.json();\n\n\t\t\t\tlet outputAirflow = vscode.window.createOutputChannel(\"Airflow\");\n\t\t\t\toutputAirflow.clear();\n\n\t\t\t\tfor(var taskInstance of responseTaskInstancesJson['task_instances'])\n\t\t\t\t{\n\t\t\t\t\tlet responseLogs = await fetch(this.apiUrl + '/dags/' + node.dagId + '/dagRuns/' + dagRunId+ '/taskInstances/' + taskInstance['task_id'] + '/logs/' + taskInstance['try_number'], params);\n\t\t\t\t\tlet responseLogsText = await responseLogs.text();\n\t\t\t\t\toutputAirflow.append('##########\\n');\n\t\t\t\t\toutputAirflow.append('Dag=' + node.dagId + '\\n');\n\t\t\t\t\toutputAirflow.append('DagRun=' + dagRunId + '\\n');\n\t\t\t\t\toutputAirflow.append('TaskId=' + taskInstance['task_id'] + '\\n');\n\t\t\t\t\toutputAirflow.append('Try=' + taskInstance['try_number'] + '\\n');\n\t\t\t\t\toutputAirflow.append('##########\\n\\n');\n\t\t\t\t\toutputAirflow.append(responseLogsText);\n\t\t\t\t}\n\t\t\t\toutputAirflow.append('### END OF DAG RUN ###');\n\t\t\t\toutputAirflow.show();\n\t\t\t\tthis.showInfoMessage('Latest DAG Run Logs are printed to output.');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t\t\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + error.message);\n\t\t}\n\t}\n\n\tasync dagSourceCode(node: DagTreeItem) {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dagSources/' + node.fileToken, params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet sourceCode = await response.text();\n\n\t\t\t\tlet outputAirflow = vscode.window.createOutputChannel(\"Airflow\");\n\t\t\t\toutputAirflow.clear();\n\t\t\t\toutputAirflow.append(sourceCode);\n\t\t\t\toutputAirflow.show();\n\t\t\t\t\n\t\t\t\tthis.showInfoMessage('Source Code printed to output.');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t\t\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Error !!!\\n\\n' + error.message);\n\t\t}\n\t}\n\n\tshowInfoMessage(message: string): void {\n\t\tvscode.window.showInformationMessage(message);\n\t}\n\n\tshowErrorMessage(message: string): void {\n\t\tvscode.window.showErrorMessage(message);\n\t}\n\n\tasync filter() {\n\t\tlet filterStringTemp = await vscode.window.showInputBox({value:this.filterString, placeHolder: 'Enter your filters seperated by comma' });\n\t\t\n\t\tif(filterStringTemp === undefined) { return; }\n\t\t\n\t\tif (filterStringTemp !== '') {\n\t\t\tthis.filterString = filterStringTemp;\n\t\t\tthis.view.message = 'Filter : ' + this.filterString;\n\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t}\n\t\telse {\n\t\t\tthis.filterString = '';\n\t\t\tthis.view.message = '';\n\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t}\n\t\tthis.saveState();\n\t\tthis.treeDataProvider.refresh();\n\t}\n\n\tasync addServer() {\n\t\tlet apiUrlTemp = await vscode.window.showInputBox({ placeHolder: 'API Full URL (Exp:http://localhost:8080/api/v1)' });\n\t\t\n\t\tif (apiUrlTemp === undefined) { return; }\n\n\t\tif (apiUrlTemp === '' && this.apiUrl) {\n\t\t\tlet deleteApiConfig = await vscode.window.showInputBox({ placeHolder: 'Delete Current Airflow Connection Coniguration ? (Yes/No)'});\n\t\t\tif(deleteApiConfig === 'Yes')\n\t\t\t{\n\t\t\t\tthis.resetView();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet userNameTemp = await vscode.window.showInputBox({ placeHolder: 'User Name' });\n\t\tif (!userNameTemp) { return; }\n\n\t\tlet passwordTemp = await vscode.window.showInputBox({ placeHolder: 'Password' });\n\t\tif (!passwordTemp) { return; }\n\n\t\tthis.apiUrl = apiUrlTemp;\n\t\tthis.apiUserName = userNameTemp;\n\t\tthis.apiPassword = passwordTemp;\n\n\t\tthis.saveState();\n\n\t\tthis.refresh();\n\t}\n\n\tasync loadDags() {\n\t\tif (!this.apiUrl) { return; }\n\t\tif (!this.apiUserName) { return; }\n\t\tif (!this.apiPassword) { return; }\n\n\t\tthis.daglistResponse = undefined;\n\t\tthis.treeDataProvider.daglistResponse = this.daglistResponse;\n\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': 'Basic ' + encode(this.apiUserName + \":\" + this.apiPassword)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet response = await fetch(this.apiUrl + '/dags', params);\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.daglistResponse = await response.json();\n\t\t\t\tthis.treeDataProvider.daglistResponse = this.daglistResponse;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showErrorMessage(' Dag Load Error !!!\\n\\n' + response.statusText);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.showErrorMessage('Can not connect to Airflow. Please check Url, UserName and Password.\\n\\n' + error.message);\n\t\t}\n\n\t\tthis.treeDataProvider.refresh();\n\n\t\tthis.view.title = this.apiUrl;\n\t\t//this.view.message = 'message';\n\t}\n\n\tsaveState() {\n\t\ttry {\n\t\t\tthis.context.globalState.update('apiUrl', this.apiUrl);\n\t\t\tthis.context.globalState.update('apiUserName', this.apiUserName);\n\t\t\tthis.context.globalState.update('apiPassword', this.apiPassword);\n\t\t\tthis.context.globalState.update('filterString', this.filterString);\n\t\t} catch (error) {\n\n\t\t}\n\t}\n\n\tloadState() {\n\t\ttry {\n\t\t\tlet apiUrlTemp: string = this.context.globalState.get('apiUrl');\n\t\t\tif (apiUrlTemp) { this.apiUrl = apiUrlTemp; }\n\n\t\t\tlet apiUserNameTemp: string = this.context.globalState.get('apiUserName');\n\t\t\tif (apiUserNameTemp) { this.apiUserName = apiUserNameTemp; }\n\n\t\t\tlet apiPasswordTemp: string = this.context.globalState.get('apiPassword');\n\t\t\tif (apiPasswordTemp) { this.apiPassword = apiPasswordTemp; }\n\n\t\t\tlet filterStringTemp: string = this.context.globalState.get('filterString');\n\t\t\tif (filterStringTemp) {\n\t\t\t\tthis.filterString = filterStringTemp;\n\t\t\t\tthis.view.message = 'Filter : ' + this.filterString;\n\t\t\t\tthis.treeDataProvider.filterString = this.filterString;\n\t\t\t}\n\t\t} catch (error) {\n\n\t\t}\n\t}\n}\n\nexport class AirflowTreeDataProvider implements vscode.TreeDataProvider<DagTreeItem>\n{\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<DagTreeItem | undefined | void> = new vscode.EventEmitter<DagTreeItem | undefined | void>();\n\treadonly onDidChangeTreeData: vscode.Event<DagTreeItem | undefined | void> = this._onDidChangeTreeData.event;\n\tdaglistResponse: any;\n\tfilterString: string = '';\n\n\trefresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\n\tgetChildren(element: DagTreeItem): Thenable<DagTreeItem[]> {\n\t\tif (!element) {\n\t\t\tlet dagList: DagTreeItem[] = [];\n\n\t\t\tif (this.daglistResponse) {\n\t\t\t\tfor (var dag of this.daglistResponse[\"dags\"]) {\n\t\t\t\t\tif (dag) {\n\t\t\t\t\t\tlet treeItem = new DagTreeItem(dag);\n\t\t\t\t\t\tif (!this.filterString || (this.filterString && treeItem.doesFilterMatch(this.filterString))) {\n\t\t\t\t\t\t\tdagList.push(treeItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve(dagList);\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tgetTreeItem(element: DagTreeItem): DagTreeItem {\n\t\treturn element;\n\t}\n}\n\nexport class DagTreeItem extends vscode.TreeItem {\n\tpublic isPaused: boolean;\n\tpublic isActive: boolean;\n\tpublic dagId: string;\n\tpublic owners: string[];\n\tpublic tags: string[];\n\tpublic apiResponse: any;\n\tpublic fileToken: string;\n\n\tconstructor(apiResponse: any) {\n\t\tsuper(apiResponse[\"dag_id\"]);\n\t\tthis.setApiResponse(apiResponse);\n\t\tthis.refreshUI();\n\t  }\n\n\t  public setApiResponse(apiResponse: any) {\n\t\tthis.apiResponse = apiResponse;\n\t\tthis.dagId = apiResponse[\"dag_id\"];\n\t\tthis.isActive = apiResponse[\"is_active\"];\n\t\tthis.isPaused = apiResponse[\"is_paused\"];\n\t\tthis.owners = apiResponse[\"owners\"];\n\t\tthis.tags = apiResponse[\"tags\"];\n\t\tthis.fileToken = apiResponse[\"file_token\"];\n\t  }\n\n\t  public refreshUI() {\n\t\tif (this.isPaused) {\n\t\t\tthis.iconPath = new vscode.ThemeIcon('debug-breakpoint-unverified');\n\t\t\tthis.apiResponse[\"is_paused\"] = true;\n\t\t}\n\t\telse {\n\t\t\tthis.iconPath = new vscode.ThemeIcon('pass');\n\t\t\tthis.apiResponse[\"is_paused\"] = false;\n\t\t}\n\t  }\n\n\t  public doesFilterMatch(filterString: string): boolean {\n\t\tif (filterString.includes('active') && !this.isPaused) { return true; }\n\t\tif (filterString.includes('paused') && this.isPaused) { return true; }\n\n\t\tlet words: string[] = filterString.split(',');\n\t\tfor (var word of words) {\n\t\t\tif (this.dagId.includes(word)) { return true; }\n\t\t\tif (this.owners.includes(word)) { return true; }\n\t\t\t//TODO\n\t\t\t//if(tags.forEach(function(e){ e.normalize.includes(word); })) { return true; }\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"worker_threads\");","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:zlib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:buffer\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:util\");","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:net\");","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (/^(.+\\.)*localhost$/.test(url.host)) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { AirflowViewManager, DagTreeItem } from './airflowView';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('Extension \"airflow-vscode-extension\" is now active!');\n\n\tlet airflowView:AirflowViewManager = new AirflowViewManager(context);\n\n\tvscode.commands.registerCommand('airflowView.refreshServer', () => {\n\t\tairflowView.refresh();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.addServer', () => {\n\t\tairflowView.addServer();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.filter', () => {\n\t\tairflowView.filter();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.viewDagView', () => {\n\t\tairflowView.viewDagView();\n\t});\n\n\tvscode.commands.registerCommand('airflowView.triggerDag', (node: DagTreeItem) => {\n\t\tairflowView.triggerDag(node);\n\t});\n\n\tvscode.commands.registerCommand('airflowView.triggerDagWithConfig', (node: DagTreeItem) => {\n\t\tairflowView.triggerDagWConfig(node);\n\t});\n\n\tvscode.commands.registerCommand('airflowView.pauseDAG', (node: DagTreeItem) => {\n\t\tairflowView.pauseDAG(node);\n\t});\n\n\tvscode.commands.registerCommand('airflowView.unPauseDAG', (node: DagTreeItem) => {\n\t\tairflowView.unPauseDAG(node);\n\t});\n\n\tvscode.commands.registerCommand('airflowView.lastDAGRunLog', (node: DagTreeItem) => {\n\t\tairflowView.lastDAGRunLog(node);\n\t});\n\n\tvscode.commands.registerCommand('airflowView.dagSourceCode', (node: DagTreeItem) => {\n\t\tairflowView.dagSourceCode(node);\n\t});\n\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n\tconsole.log('Extension \"airflow-vscode-extension\" is now deactive!');\n}\n"],"names":["installedChunks","root","freeGlobal","module","exports","global","window","InvalidCharacterError","message","this","prototype","Error","name","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","String","test","a","b","c","buffer","padding","length","output","position","charCodeAt","charAt","replace","bitStorage","bitCounter","indexOf","fromCharCode","globalThis","DOMException","MessageChannel","port","port1","ab","ArrayBuffer","postMessage","err","constructor","context","apiUrl","apiUserName","apiPassword","filterString","treeDataProvider","AirflowTreeDataProvider","view","vscode","createTreeView","showCollapseAll","loadState","refresh","subscriptions","push","loadDags","resetView","daglistResponse","undefined","title","saveState","viewDagView","showInfoMessage","async","node","params","method","headers","encode","body","JSON","stringify","response","dagId","status","showErrorMessage","statusText","showInputBox","placeHolder","isPaused","refreshUI","dagRunId","json","responseTaskInstances","responseTaskInstancesJson","outputAirflow","createOutputChannel","taskInstance","clear","responseLogs","responseLogsText","text","append","show","fileToken","sourceCode","showInformationMessage","filterStringTemp","value","apiUrlTemp","userNameTemp","passwordTemp","globalState","update","get","apiUserNameTemp","apiPasswordTemp","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","fire","getChildren","element","dagList","dag","treeItem","DagTreeItem","doesFilterMatch","Promise","resolve","getTreeItem","TreeItem","apiResponse","super","setApiResponse","isActive","owners","tags","iconPath","ThemeIcon","includes","words","split","word","factory","SymbolPolyfill","Symbol","iterator","description","noop","globals","self","typeIsObject","x","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","then","originalPromiseResolve","bind","originalPromiseReject","reject","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","fn","reflectCall","F","V","args","TypeError","Function","apply","promiseCall","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","oldBack","newBack","QUEUE_MAX_ARRAY_SIZE","shift","oldFront","newFront","oldCursor","newCursor","elements","forEach","callback","i","peek","front","cursor","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseResolve","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","Number","isFinite","MathTrunc","Math","trunc","v","ceil","floor","assertDictionary","obj","assertFunction","assertObject","isObject","assertRequiredArgument","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","convertUnsignedLongLongWithEnforceRange","upperBound","MAX_SAFE_INTEGER","integerPart","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","closed","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","ReadableStreamDefaultReaderRead","_errorSteps","e","releaseLock","Object","hasOwnProperty","_disturbed","_readableStreamController","defineProperties","enumerable","toStringTag","defineProperty","configurable","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","return","returnSteps","_returnSteps","result","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","_a","setPrototypeOf","NumberIsNaN","isNaN","CreateArrayFromList","slice","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","Uint8Array","set","ArrayBufferSlice","begin","end","CloneAsUint8Array","O","byteOffset","byteLength","DequeueValue","container","pair","_queue","_queueTotalSize","size","EnqueueValueWithSize","Infinity","RangeError","ResetQueue","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","close","_closeRequested","state","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","controller","shouldPull","_started","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readIntoRequest","_readIntoRequests","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transferredBuffer","firstPendingPullInto","ReadableStreamError","create","request","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","DataView","BYTES_PER_ELEMENT","ctor","emptyView","ReadableByteStreamControllerPullInto","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSinkAbortCallback","original","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","supportsAbortController","AbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","abort","start","type","write","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","WritableStreamDefaultController","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","closeSentinel","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","writeRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","_strategySizeAlgorithm","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","createAbortController","_writeAlgorithm","_closeAlgorithm","WritableStreamMarkCloseRequestInFlight","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","_readyPromise_resolve","_readyPromise_reject","NativeDOMException","DOMException$1","isDOMExceptionConstructor","captureStackTrace","writable","createDOMExceptionPolyfill","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","all","map","action","aborted","addEventListener","isOrBecomesErrored","shutdown","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","removeEventListener","resolveLoop","rejectLoop","resolveRead","rejectRead","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","SetUpReadableStreamDefaultController","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","mode","convertPipeOptions","options","isAbortSignal","assertAbortSignal","Boolean","ReadableStream","rawUnderlyingSource","underlyingSource","pull","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","underlyingByteSource","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","getReader","rawOptions","convertReaderOptions","pipeThrough","rawTransform","transform","readable","convertReadableWritablePair","pipeTo","destination","tee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgainForBranch1","readAgainForBranch2","canceled1","canceled2","cancelPromise","forwardReaderError","thisReader","pullWithDefaultReader","chunk1","chunk2","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","compositeReason","cancelResult","ReadableByteStreamTee","cloneForBranch2","readAgain","CreateReadableStream","ReadableStreamDefaultTee","values","impl","AcquireReadableStreamAsyncIterator","convertIteratorOptions","convertQueuingStrategyInit","asyncIterator","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","flush","readableType","writableType","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","startPromise","_writable","CreateWritableStream","_transformStreamController","_backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","TransformStreamDefaultSinkWriteAlgorithm","_readable","flushPromise","_flushAlgorithm","TransformStreamDefaultControllerClearAlgorithms","TransformStreamError","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamSetBackpressure","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise_resolve","InitializeTransformStream","TransformStreamDefaultController","transformAlgorithm","TransformStreamDefaultControllerEnqueue","transformResultE","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","SetUpTransformStreamDefaultController","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","IsTransformStreamDefaultController","defaultControllerBrandCheckException","terminate","TransformStreamDefaultControllerTerminate","readableController","ReadableStreamDefaultControllerHasBackpressure","require","process","emitWarning","assign","Blob","blob","ctrl","arrayBuffer","fileBits","fileName","arguments","lastModified","Date","now","static","hasInstance","object","stat","blobFromSync","path","fromBlob","statSync","blobFrom","fileFrom","fromFile","fileFromSync","BlobDataItem","mtimeMs","basename","createReadStream","toIterator","parts","clone","part","_Blob","blobParts","encoder","TextEncoder","endings","decoder","TextDecoder","str","decode","data","offset","it","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","t","h","random","m","f","FormData","entries","o","some","delete","filter","l","getAll","has","d","formDataToBlob","B","padStart","p","FetchBaseError","FetchError","systemError","code","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","INTERNALS","Body","boundary","Buffer","toString","types","disturbed","on","error_","url","bodyUsed","consumeBody","ct","startsWith","formData","parameters","URLSearchParams","toFormData","buf","parse","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","join","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","validateHeaderValue","Headers","raw","Proxy","target","receiver","Set","keys","Reflect","thisArg","reduce","key","for","property","redirectStatus","isRedirect","Response","contentType","counter","ok","redirected","location","URL","stripURLForUseAsAReferrer","originOnly","protocol","username","password","hash","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","redirect","follow","compress","agent","insecureHTTPParser","referrerPolicy","format","validateReferrerPolicy","AbortError","supportedSchemas","fetch","options_","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","origin","determineRequestsReferrer","lastOffset","href","getSearch","getNodeRequestOptions","uri","firstComma","meta","substring","charset","typeFull","encoding","unescape","from","send","emit","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","prependListener","removeListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","index","array","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","orig","hostname","endsWith","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","token","parseReferrerPolicyFromHeader","once","responseOptions","statusMessage","codings","zlibOptions","finishFlush","writeToStream","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","definition","chunkId","promises","u","prop","nmd","paths","children","moreModules","modules","chunkIds","ids","runtime","installChunk","console","log","airflowView","AirflowViewManager","commands","registerCommand","addServer","triggerDag","triggerDagWConfig","pauseDAG","unPauseDAG","lastDAGRunLog","dagSourceCode"],"sourceRoot":""}